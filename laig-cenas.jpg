parseInitials:
- Verificação das matrizes mal feita:
	- Verifica se tem no máximo 1T, 3R e 1S quando devia verificar que tem exatamente essas transformações
	- Apenas dá warnings se não encontrar as necessárias e substitui pelas matrizes neutras respetivas (devia devolver erro e abortar)
NOTE TO SELF: Perceber melhor a cena das matrizes em WebGL

parseIllumination:
- Não dá parse da tag doubleside (ignorada)
- Aceita não ter a tag <ambient> dando apenas warning e colocando o valor por defeito (preto opaco); preferia meter a dar erro e abortar tbh

parseLights:
- grandChildren é um mau nome para usar como objeto de atributos de uma luz (fica pouco legível)

parseTextures:
- eachTexture como nome do array de textures... Não.
- Exigência da existência de pelo menos uma textura: why tho? Tem de haver algo por defeito no WebGL? Apesar de improvável pode não haver texturas na cena
- paths das imagens para texturas são assumidos como relativos a partir de ./scenes, sendo . o diretório de index.html; deveriam ser a partir de . apenas
- Adicionar verificação para não permitir as keywords "null" e "clear" como ID

parseMaterials:
- children como nome do array de materials... Não.
- Adicionar verificação para não permitir a keyword "null" como ID

parseNodes:
- Isolar pedaço de código que identifica nó raíz
- A função não verifica se o nó identificado como root existe (Estranho? Must re-check mas não me lembro de ver)
- Isolar pedaços de código que dão retrieve de cada elemento de um nó
- Ao verificar o ID do material e/ou textura, fazer um case insensitive match para "null" e/ou "clear" (? Picuice though)
- Ao dar retrieve das transformações, fazer um filter ao array de specs do nó para ficar apenas com as transformações (evita loop atual que percorre todas as características - para aí pela 3ª vez na função já -)
- Ao dar parse dos dados das transformações, se não conseguir ler dá warning e ignora, mas se ler e for NaN já aborta o programa. Coerência precisa-se (preferia abortar sempre)
- A VER MELHOR: Ao dar retrieve to tipo de leaf, "patch" não faz parte das opções possíveis (que magia negra será esta? Não perder a próxima teórica)


Geral:
- Muita cena repetida desnecessariamente, extract method pode ser aplicado em muitas zonas reduzindo o tamanho do ficheiro e aumentando a legibilidade
- Eliminar console logs desnecessários (porque raio existe um método log que só dá console.log e depois no código se usa this.log e outras vezes console.log?)
- var -> let (em todo o lado mas especialmente nos loops)
- Alguns valores que, em caso de erro a dar parse, aborta o programa; in some cases, a default value + warning wouldn't be a bad alternative
- Warnings de unknown tags (e mensagens em geral) estão muito genéricas, precisam de pelo menos uma tag atrás para identificar a secção de processamento a que pertencem
